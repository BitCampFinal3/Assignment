# 알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오.

# 길이가 짧은 것부터
# 길이가 같으면 사전 순으로
# 단, 중복된 단어는 하나만 남기고 제거해야 한다.

# 개수 입력받기
n = int(input())

words = []

# 단어 입력받기
for _ in range(n):
    word = input()
    
    # 중복 제거
    if word not in words:
        words.append(word)
       
# 알파벳 길이가 짧은 순으로, 길이가 같다면 사전순으로 정렬
words.sort(key=lambda x: (len(x),x))

for word in words:
    print(word)
    
    
    
    
    
    
    
    
# if ~ not in
# in은 특정 요소가 시퀀스에 포함되어 있는지를 확인하는 연산자
# 이 문법은 주로 리스트, 튜플, 문자열 같은 시퀀스에서 
# 특정 요소의 존재 여부를 검사할 때 사용

# words.sort(key= lambda x: (len(x),x))
# sort() 메소드에 key인자를 사용하여 정렬 기준을 설정함

# sort()
# sort()는 파이썬 리스트의 원소들을 정렬하는 메서드
# 기본적으로는 리스트의 원소를 오름차순으로 정렬하지만, 
# key 인자를 사용하면 정렬 기준을 커스터마이징할 수 있음

# key인자
# key 인자에 전달되는 함수는 리스트의 각 원소를 인자로 받아서 비교 가능한 값을 반환해야 함

# lambda x: (len(x),x)
# lambda는 파이썬에서 익명 함수를 정의할 때 사용하는 키워드
# :x는 words 리스트의 각 단어를 의미

# 정렬 기준
# len(x): 단어 x의 길이를 반환. 
# 이 값이 첫 번째 정렬 기준(단어의 길이)
# x: 단어 x 자체를 반환. 이 값이 두 번째 정렬 기준(알파벳순)
# 파이썬에서 문자열은 기본적으로 사전순으로 비교되기 때문에, sort()메소드에서 문자열을 정렬할 때 특별한 추가설정없이 알파벳순으로 정렬됨.

